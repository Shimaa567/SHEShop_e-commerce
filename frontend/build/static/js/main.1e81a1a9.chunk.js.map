{"version":3,"sources":["components/Footer.tsx","redux/features/products/types.ts","redux/features/products/productList.ts","redux/features/productDetails/types.ts","redux/features/productDetails/productDetailsList.ts","redux/features/productDetails/productDelete.ts","redux/features/productDetails/productCreate.ts","redux/features/productDetails/productReview.ts","redux/features/productDetails/productUpdate.ts","redux/features/productDetails/productTopRated.ts","redux/features/cartDetails/types.ts","redux/features/cartDetails/cart.ts","redux/features/order/types.ts","redux/features/userDetails/types.ts","redux/features/users/types.ts","redux/features/users/user.ts","redux/features/register/types.ts","redux/features/register/UserRegister.ts","redux/features/userDetails/userProfileDetails.ts","redux/features/profile/types.ts","redux/features/profile/updateProfile.ts","redux/features/users/usersList.ts","redux/features/users/userDelete.ts","redux/features/users/userUpdates.ts","redux/features/order/orderCreate.ts","redux/features/order/orderDetails.ts","redux/features/order/orderPay.ts","redux/features/order/orderDelivery.ts","redux/features/order/orderMyList.ts","redux/features/order/orderList.ts","redux/store.ts","components/SearchBox.tsx","components/Header.tsx","components/Layout.tsx","components/Rating.tsx","components/Products.tsx","components/Loader.tsx","components/Message.tsx","components/Meta.tsx","components/Paginate.tsx","components/CarouselModel.tsx","components/ProductCarousel.tsx","screens/HomeScreen.tsx","screens/ProductScreen.tsx","screens/CartScreen.tsx","components/FormContainer.tsx","screens/LoginScreen.tsx","screens/RegisterScreen.tsx","screens/ProfileScreen.tsx","components/CheckoutSteps.tsx","screens/ShippingScreen.tsx","screens/PaymentScreen.tsx","screens/PlaceOrderScreen.tsx","screens/OrderScreen.tsx","screens/OrderListScreen.tsx","screens/UserListScreen.tsx","screens/UserEditScreen.tsx","screens/ProductListScreen.tsx","screens/ProductEditScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","Container","Row","Col","className","style","marginLeft","marginTop","Image","src","alt","PRODUCT_LIST_REQUEST","PRODUCT_LIST_FULFILLED","PRODUCT_LIST_REJECTED","initialState","loading","error","listProducts","keyword","pageNumber","dispatch","a","type","axios","get","data","payload","response","message","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FULFILLED","PRODUCT_DETAILS_REJECTED","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FULFILLED","PRODUCT_DELETE_REJECTED","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_FULFILLED","PRODUCT_CREATE_REJECTED","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_FULFILLED","PRODUCT_UPDATE_REJECTED","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_FULFILLED","PRODUCT_CREATE_REVIEW_REJECTED","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_FULFILLED","PRODUCT_TOP_REJECTED","product","undefined","listProductDetails","id","products","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartItems","shippingAddress","paymentMethod","addToCart","qty","getState","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","console","log","ORDER_CREATE_REQUEST","ORDER_CREATE_FULFILLED","ORDER_CREATE_REJECTED","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FULFILLED","ORDER_DETAILS_REJECTED","ORDER_PAY_REQUEST","ORDER_PAY_FULFILLED","ORDER_PAY_REJECTED","ORDER_PAY_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_FULFILLED","ORDER_MY_LIST_REJECTED","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_FULFILLED","ORDER_LIST_REJECTED","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_FULFILLED","ORDER_DELIVERED_REJECTED","ORDER_DELIVERED_RESET","USER_DETAILS_REQUEST","USER_DETAILS_FULFILLED","USER_DETAILS_REJECTED","USER_DETAILS_RESET","USER_LOGIN_REQUEST","USER_LOGIN_FULFILLED","USER_LOGIN_REJECTED","USER_LOGOUT","USER_LIST_REQUEST","USER_LIST_FULFILLED","USER_LIST_REJECTED","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_FULFILLED","USER_DELETE_REJECTED","USER_UPDATE_REQUEST","USER_UPDATE_FULFILLED","USER_UPDATE_REJECTED","USER_UPDATE_RESET","userInfo","USER_REGISTER_REQUEST","USER_REGISTER_FULFILLED","USER_REGISTER_REJECTED","user","getUserDetails","userLogin","config","headers","Authorization","token","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FULFILLED","USER_UPDATE_PROFILE_REJECTED","success","users","order","orders","cartItemsFromStorage","getItem","parse","userInfoFromStorage","middleware","thunk","reducer","combineReducers","productList","state","action","page","pages","productDetails","productDelete","productCreate","productUpdate","productCreateReview","productTopRated","item","existItem","find","x","map","filter","userRegister","userDetails","updateUserProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderMyList","orderList","store","createStore","composeWithDevTools","applyMiddleware","useTypedSelector","useSelector","SearchBox","useState","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","trim","push","inline","Control","onChange","target","value","placeholder","width","Button","variant","Header","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","height","borderRadius","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Layout","children","Rating","text","color","defaultProps","Products","Card","Img","Body","Title","as","Text","rating","numReviews","Loader","Spinner","animation","role","margin","display","Message","Alert","Meta","description","keywords","Helmet","content","Paginate","Pagination","Array","keys","active","CarouselModel","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","Caption","ProductCarousel","marginBottom","textAlign","md","sm","HomeScreen","useParams","useEffect","paddingTop","lg","xl","ProductScreen","setQty","setRating","comment","setComment","productReview","successReview","errorReview","alert","fluid","ListGroup","disabled","reviews","length","review","Number","createdAt","toString","substring","productId","post","Group","controlId","Label","CartScreen","location","useLocation","search","parseInt","split","qs","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","useForm","mode","handleSubmit","errors","register","redirect","email","password","login","ref","required","pattern","RegisterScreen","setError","password_repeat","confirmPassword","registerUser","FormControl","minLength","ProfileScreen","setValue","userProfileDetails","ordersLoading","ordersError","shouldValidate","put","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","postalCode","city","country","saveShippingAddress","PaymentScreen","savePaymentMethod","Check","label","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","createOrder","orderItems","OrderScreen","orderId","pageLoading","setPageLoading","clientId","setClientId","sdkReady","setSdkReady","loadingPay","successPay","successDeliver","href","options","layout","onApprove","paymentResult","payOrder","deliverOrder","OrderListScreen","UserListScreen","loadingDelete","errorDelete","successDelete","deleteHandler","window","confirm","delete","deleteUser","UserEditScreen","userId","setName","setEmail","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","checked","ProductListScreen","loadingCreate","successCreate","errorCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setBrand","setCategory","setImage","setDescription","setPrice","setCountInStock","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e81a1a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-left py-3\">Copyrights &copy; SHEShop</Col>\r\n\r\n          <Col style={{ marginLeft: \"445px\", marginTop: \"10px\" }}>\r\n            Follow Us on:\r\n            <Image\r\n              src=\"/images/social/facebook.png\"\r\n              alt=\"\"\r\n              className=\"px-2\"\r\n            ></Image>\r\n            <Image\r\n              src=\"/images/social/twitter.png\"\r\n              alt=\"\"\r\n              className=\"pr-2\"\r\n            ></Image>\r\n            <Image\r\n              src=\"/images/social/instagram.png\"\r\n              alt=\"\"\r\n              className=\"pr-2\"\r\n            ></Image>\r\n            <Image\r\n              src=\"/images/social/pinterest.png\"\r\n              alt=\"\"\r\n              className=\"pr-2\"\r\n            ></Image>\r\n            {/* <Image\r\n              src=\"/images/social/visa.png\"\r\n              alt=\"\"\r\n              className=\"px-2\"\r\n            ></Image> */}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Product } from \"../../../types/Product\";\r\n\r\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_FULFILLED = \"PRODUCT_LIST_FULFILLED\";\r\nexport const PRODUCT_LIST_REJECTED = \"PRODUCT_LIST_REJECTED\";\r\n\r\nexport interface ProductState {\r\n  products?: Array<Product>;\r\n  page?: string | number;\r\n  pages?: string | number;\r\n  loading?: boolean | null;\r\n  error?: string | null;\r\n  success?: boolean | null;\r\n  product?: Product;\r\n}\r\n\r\nexport interface ProductList {\r\n  type: typeof PRODUCT_LIST_REQUEST;\r\n}\r\nexport interface ProductListFulfilled {\r\n  type: typeof PRODUCT_LIST_FULFILLED;\r\n  payload: ProductState;\r\n}\r\nexport interface ProductListRejected {\r\n  type: typeof PRODUCT_LIST_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport type ProductListAction =\r\n  | ProductList\r\n  | ProductListFulfilled\r\n  | ProductListRejected;\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n//Types or Actions\r\nimport {\r\n  PRODUCT_LIST_FULFILLED,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_REJECTED,\r\n  ProductListAction,\r\n  ProductState,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: ProductState = {\r\n  loading: null,\r\n  error: \"\",\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductListAction\r\n): ProductState {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_LIST_FULFILLED:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        page: action.payload.page,\r\n        pages: action.payload.pages,\r\n      };\r\n    case PRODUCT_LIST_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n//Action Creators\r\n//SideEffect\r\nexport const listProducts = (\r\n  keyword: string | undefined = \"\",\r\n  pageNumber: string | undefined = \"\"\r\n) => async (dispatch: Dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REJECTED,\r\n      payload: error.response?.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Another Types/Actions\r\n// const CREATE= ''\r\n// const UPDATE= ''\r\n// const REMOVE = ''\r\n","import { ProductState } from \"./../products/types\";\r\nimport { Product } from \"../../../types/Product\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_FULFILLED = \"PRODUCT_DETAILS_FULFILLED\";\r\nexport const PRODUCT_DETAILS_REJECTED = \"PRODUCT_DETAILS_REJECTED\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_FULFILLED = \"PRODUCT_DELETE_FULFILLED\";\r\nexport const PRODUCT_DELETE_REJECTED = \"PRODUCT_DELETE_REJECTED\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_FULFILLED = \"PRODUCT_CREATE_FULFILLED\";\r\nexport const PRODUCT_CREATE_REJECTED = \"PRODUCT_CREATE_REJECTED\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_FULFILLED = \"PRODUCT_UPDATE_FULFILLED\";\r\nexport const PRODUCT_UPDATE_REJECTED = \"PRODUCT_UPDATE_REJECTED\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = \"PRODUCT_CREATE_REVIEW_REQUEST\";\r\nexport const PRODUCT_CREATE_REVIEW_FULFILLED =\r\n  \"PRODUCT_CREATE_REVIEW_FULFILLED\";\r\nexport const PRODUCT_CREATE_REVIEW_REJECTED = \"PRODUCT_CREATE_REVIEW_REJECTED\";\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_FULFILLED = \"PRODUCT_TOP_FULFILLED\";\r\nexport const PRODUCT_TOP_REJECTED = \"PRODUCT_TOP_REJECTED\";\r\n\r\nexport interface ProductDetailsState {\r\n  product?: Product;\r\n  loading?: boolean | null;\r\n  error?: string;\r\n  success?: boolean | null;\r\n  //productReview?: ProductReview;\r\n}\r\n\r\nexport interface ProductReview {\r\n  _id?: string | number | undefined;\r\n  rating?: number | string;\r\n  comment?: string;\r\n}\r\n\r\nexport interface ProductDetails {\r\n  type: typeof PRODUCT_DETAILS_REQUEST;\r\n}\r\nexport interface ProductDetailsFulfilled {\r\n  type: typeof PRODUCT_DETAILS_FULFILLED;\r\n  payload: Product;\r\n}\r\nexport interface ProductDetailsRejected {\r\n  type: typeof PRODUCT_DETAILS_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface ProductDelete {\r\n  type: typeof PRODUCT_DELETE_REQUEST;\r\n}\r\nexport interface ProductDeleteFulfilled {\r\n  type: typeof PRODUCT_DELETE_FULFILLED;\r\n  payload: Product;\r\n}\r\nexport interface ProductDeleteRejected {\r\n  type: typeof PRODUCT_DELETE_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface ProductCreate {\r\n  type: typeof PRODUCT_CREATE_REQUEST;\r\n}\r\nexport interface ProductCreateFulfilled {\r\n  type: typeof PRODUCT_CREATE_FULFILLED;\r\n  payload: Product;\r\n}\r\nexport interface ProductCreateRejected {\r\n  type: typeof PRODUCT_CREATE_REJECTED;\r\n  payload: string;\r\n}\r\nexport interface ProductCreateReset {\r\n  type: typeof PRODUCT_CREATE_RESET;\r\n}\r\n\r\nexport interface ProductUpdate {\r\n  type: typeof PRODUCT_UPDATE_REQUEST;\r\n}\r\nexport interface ProductUpdateFulfilled {\r\n  type: typeof PRODUCT_UPDATE_FULFILLED;\r\n  payload: Product;\r\n}\r\nexport interface ProductUpdateRejected {\r\n  type: typeof PRODUCT_UPDATE_REJECTED;\r\n  payload: string;\r\n}\r\nexport interface ProductUpdateReset {\r\n  type: typeof PRODUCT_UPDATE_RESET;\r\n}\r\n\r\nexport interface ProductCreateReview {\r\n  type: typeof PRODUCT_CREATE_REVIEW_REQUEST;\r\n}\r\nexport interface ProductCreateReviewFulfilled {\r\n  type: typeof PRODUCT_CREATE_REVIEW_FULFILLED;\r\n}\r\nexport interface ProductCreateReviewRejected {\r\n  type: typeof PRODUCT_CREATE_REVIEW_REJECTED;\r\n  payload: string;\r\n}\r\nexport interface ProductCreateReviewReset {\r\n  type: typeof PRODUCT_CREATE_REVIEW_RESET;\r\n}\r\n\r\nexport interface ProductTopRated {\r\n  type: typeof PRODUCT_TOP_REQUEST;\r\n}\r\nexport interface ProductTopRatedFulfilled {\r\n  type: typeof PRODUCT_TOP_FULFILLED;\r\n  payload: ProductState;\r\n}\r\nexport interface ProductTopRatedRejected {\r\n  type: typeof PRODUCT_TOP_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport type ProductDetailsActions =\r\n  | ProductDetails\r\n  | ProductDetailsFulfilled\r\n  | ProductDetailsRejected;\r\n\r\nexport type ProductDeleteActions =\r\n  | ProductDelete\r\n  | ProductDeleteFulfilled\r\n  | ProductDeleteRejected;\r\n\r\nexport type ProductCreateActions =\r\n  | ProductCreate\r\n  | ProductCreateFulfilled\r\n  | ProductCreateRejected\r\n  | ProductCreateReset;\r\n\r\nexport type ProductUpdateActions =\r\n  | ProductUpdate\r\n  | ProductUpdateFulfilled\r\n  | ProductUpdateRejected\r\n  | ProductUpdateReset;\r\n\r\nexport type ProductCreateReviewActions =\r\n  | ProductCreateReview\r\n  | ProductCreateReviewFulfilled\r\n  | ProductCreateReviewRejected\r\n  | ProductCreateReviewReset;\r\n\r\nexport type ProductTopRatedActions =\r\n  | ProductTopRated\r\n  | ProductTopRatedFulfilled\r\n  | ProductTopRatedRejected;\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\n//Types or Actions\r\nimport {\r\n  PRODUCT_DETAILS_FULFILLED,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_REJECTED,\r\n  ProductDetailsActions,\r\n  ProductDetailsState,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: ProductDetailsState = {\r\n  //product: { reviews: []},\r\n  product: undefined,\r\n  loading: null,\r\n  error: \"\",\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductDetailsActions\r\n): ProductDetailsState {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_FULFILLED:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//SideEffect\r\nexport const listProductDetails = (id: string) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_REJECTED,\r\n      payload: error.response?.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FULFILLED,\r\n  PRODUCT_DELETE_REJECTED,\r\n  ProductDeleteActions,\r\n} from \"./types\";\r\nimport { ProductState } from \"../products/types\";\r\n//Reducer\r\nconst initialState: ProductState = {};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductDeleteActions\r\n) {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const deleteProduct = (id: string | number | undefined) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FULFILLED,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_FULFILLED,\r\n  PRODUCT_CREATE_REJECTED,\r\n  ProductCreateActions,\r\n  PRODUCT_CREATE_RESET,\r\n} from \"./types\";\r\nimport { ProductState } from \"../products/types\";\r\n\r\n//Reducer\r\nconst initialState: ProductState = {};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductCreateActions\r\n) {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_FULFILLED:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const createProduct = () => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\n//import { Product } from \"../../../types/Product\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_FULFILLED,\r\n  PRODUCT_CREATE_REVIEW_REJECTED,\r\n  ProductCreateReviewActions,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  ProductDetailsState,\r\n  ProductReview,\r\n} from \"./types\";\r\n//import { ProductState } from \"../products/types\";\r\n\r\n//Reducer\r\nconst initialState: ProductDetailsState = {};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductCreateReviewActions\r\n) {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const reviewProduct = (\r\n  productId: string | number | undefined,\r\n  review: ProductReview\r\n) => async (dispatch: Dispatch, getState: () => RootState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FULFILLED,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_FULFILLED,\r\n  PRODUCT_UPDATE_REJECTED,\r\n  ProductUpdateActions,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"./types\";\r\nimport { ProductState } from \"../products/types\";\r\nimport { Product } from \"../../../types/Product\";\r\n\r\n//Reducer\r\nconst initialState: ProductState = { product: undefined };\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductUpdateActions\r\n) {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_FULFILLED:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const updateProduct = (product: Product) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { ProductState } from \"../products/types\";\r\n\r\n//Types or Actions\r\nimport {\r\n  PRODUCT_TOP_FULFILLED,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_REJECTED,\r\n  ProductTopRatedActions,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: ProductState = { loading: null, error: \"\", products: [] };\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ProductTopRatedActions\r\n): ProductState {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_TOP_FULFILLED:\r\n      return { loading: false, products: action.payload.products };\r\n    case PRODUCT_TOP_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creators\r\n\r\nexport const listTopProducts = () => async (dispatch: Dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_REJECTED,\r\n      payload: error.response?.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//Another Types/Actions\r\n// const CREATE= ''\r\n// const UPDATE= ''\r\n// const REMOVE = ''\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\n\r\nexport interface CartState {\r\n  cartItems: Array<CartItem>;\r\n  shippingAddress?: ShippingAddress;\r\n  paymentMethod?: string;\r\n\r\n  itemsPrice?: number;\r\n  shippingPrice?: number;\r\n  taxPrice?: number;\r\n  totalPrice?: number;\r\n}\r\nexport interface CartItem {\r\n  product: string;\r\n  _id?: string;\r\n  name?: string;\r\n  image?: string;\r\n  price: number;\r\n  countInStock?: number;\r\n  qty: number;\r\n}\r\n\r\nexport interface ShippingAddress {\r\n  address?: string;\r\n  city?: string;\r\n  postalCode?: number;\r\n  country?: string;\r\n}\r\n\r\nexport interface AddToCart {\r\n  type: typeof CART_ADD_ITEM;\r\n  payload: CartItem;\r\n}\r\n\r\nexport interface RemoveFromCart {\r\n  type: typeof CART_REMOVE_ITEM;\r\n  payload: string;\r\n}\r\n\r\nexport interface SaveShippingAddress {\r\n  type: typeof CART_SAVE_SHIPPING_ADDRESS;\r\n  payload: ShippingAddress;\r\n}\r\n\r\nexport interface PaymentMethod {\r\n  type: typeof CART_SAVE_PAYMENT_METHOD;\r\n  payload: string;\r\n}\r\n\r\nexport type CartActions =\r\n  | AddToCart\r\n  | RemoveFromCart\r\n  | SaveShippingAddress\r\n  | PaymentMethod;\r\n","import { Dispatch } from \"redux\";\r\n//Types / Action'\r\nimport axios from \"axios\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  CART_REMOVE_ITEM,\r\n  CartActions,\r\n  CartItem,\r\n  CartState,\r\n  CART_ADD_ITEM,\r\n  ShippingAddress,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: CartState = {\r\n  cartItems: [],\r\n  shippingAddress: {},\r\n  paymentMethod: \"\",\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: CartActions\r\n): CartState {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return { ...state, shippingAddress: action.payload };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return { ...state, paymentMethod: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Side Effect (Action Creator)\r\nexport const addToCart = (id: string, qty: number) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  const { data } = await axios.get<CartItem>(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n  console.log(\"this is data\", getState());\r\n};\r\n\r\nexport const removeFromCart = (id: string) => (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data: ShippingAddress) => (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data: string | undefined) => (\r\n  dispatch: Dispatch\r\n) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import { UserInfo } from \"../users/types\";\r\nimport { CartItem } from \"../cartDetails/types\";\r\nimport { ShippingAddress } from \"../cartDetails/types\";\r\n\r\nexport const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_FULFILLED = \"ORDER_CREATE_FULFILLED\";\r\nexport const ORDER_CREATE_REJECTED = \"ORDER_CREATE_REJECTED\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_FULFILLED = \"ORDER_DETAILS_FULFILLED\";\r\nexport const ORDER_DETAILS_REJECTED = \"ORDER_DETAILS_REJECTED\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_FULFILLED = \"ORDER_PAY_FULFILLED\";\r\nexport const ORDER_PAY_REJECTED = \"ORDER_PAY_REJECTED\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_MY_LIST_REQUEST = \"ORDER_MY_LIST_REQUEST\";\r\nexport const ORDER_MY_LIST_FULFILLED = \"ORDER_MY_LIST_FULFILLED\";\r\nexport const ORDER_MY_LIST_REJECTED = \"ORDER_MY_LIST_REJECTED\";\r\nexport const ORDER_MY_LIST_RESET = \"ORDER_MY_LIST_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_FULFILLED = \"ORDER_LIST_FULFILLED\";\r\nexport const ORDER_LIST_REJECTED = \"ORDER_LIST_REJECTED\";\r\n\r\nexport const ORDER_DELIVERED_REQUEST = \"ORDER_DELIVERED_REQUEST\";\r\nexport const ORDER_DELIVERED_FULFILLED = \"ORDER_DELIVERED_FULFILLED\";\r\nexport const ORDER_DELIVERED_REJECTED = \"ORDER_DELIVERED_REJECTED\";\r\nexport const ORDER_DELIVERED_RESET = \"ORDER_DELIVERED_RESET\";\r\n\r\nexport interface OrderState {\r\n  order?: OrderInfo | null;\r\n  orders?: Array<OrderInfo> | null;\r\n  loading?: boolean | null;\r\n  success?: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport interface OrderInfo {\r\n  orderItems?: Array<CartItem>;\r\n  _id?: string;\r\n  shippingAddress?: ShippingAddress;\r\n  paymentMethod?: string;\r\n  itemsPrice?: number;\r\n  shippingPrice?: number;\r\n  taxPrice?: number;\r\n  totalPrice?: number;\r\n  createdAt?: Date;\r\n  isPaid?: boolean;\r\n  paidAt?: Date;\r\n  isDelivered?: boolean;\r\n  deliveredAt?: Date;\r\n  user?: UserInfo;\r\n}\r\n\r\nexport interface PaymentResult {\r\n  _id: string;\r\n  status: number;\r\n  update_time: Date;\r\n  email_address: string;\r\n}\r\n\r\nexport interface OrderCreate {\r\n  type: typeof ORDER_CREATE_REQUEST;\r\n}\r\n\r\nexport interface OrderCreateFulfilled {\r\n  type: typeof ORDER_CREATE_FULFILLED;\r\n  payload: OrderInfo;\r\n}\r\n\r\nexport interface OrderCreateRejected {\r\n  type: typeof ORDER_CREATE_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderCreateReset {\r\n  type: typeof ORDER_CREATE_RESET;\r\n}\r\n\r\nexport interface OrderDetails {\r\n  type: typeof ORDER_DETAILS_REQUEST;\r\n}\r\n\r\nexport interface OrderDetailsFulfilled {\r\n  type: typeof ORDER_DETAILS_FULFILLED;\r\n  payload: OrderInfo;\r\n}\r\n\r\nexport interface OrderDetailsRejected {\r\n  type: typeof ORDER_DETAILS_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderPay {\r\n  type: typeof ORDER_PAY_REQUEST;\r\n}\r\n\r\nexport interface OrderPayFulfilled {\r\n  type: typeof ORDER_PAY_FULFILLED;\r\n}\r\n\r\nexport interface OrderPayRejected {\r\n  type: typeof ORDER_PAY_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderPayReset {\r\n  type: typeof ORDER_PAY_RESET;\r\n}\r\n\r\nexport interface OrderMyList {\r\n  type: typeof ORDER_MY_LIST_REQUEST;\r\n}\r\n\r\nexport interface OrderMyListFulfilled {\r\n  type: typeof ORDER_MY_LIST_FULFILLED;\r\n  payload: Array<OrderInfo>;\r\n}\r\n\r\nexport interface OrderMyListRejected {\r\n  type: typeof ORDER_MY_LIST_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderMyListReset {\r\n  type: typeof ORDER_MY_LIST_RESET;\r\n}\r\n\r\nexport interface OrderList {\r\n  type: typeof ORDER_LIST_REQUEST;\r\n}\r\n\r\nexport interface OrderListFulfilled {\r\n  type: typeof ORDER_LIST_FULFILLED;\r\n  payload: Array<OrderInfo>;\r\n}\r\n\r\nexport interface OrderListRejected {\r\n  type: typeof ORDER_LIST_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderDeliver {\r\n  type: typeof ORDER_DELIVERED_REQUEST;\r\n}\r\n\r\nexport interface OrderDeliverFulfilled {\r\n  type: typeof ORDER_DELIVERED_FULFILLED;\r\n}\r\n\r\nexport interface OrderDeliverRejected {\r\n  type: typeof ORDER_DELIVERED_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface OrderDeliverReset {\r\n  type: typeof ORDER_DELIVERED_RESET;\r\n}\r\n\r\nexport type OrderListActions =\r\n  | OrderList\r\n  | OrderListFulfilled\r\n  | OrderListRejected;\r\n\r\nexport type OrderDeliverActions =\r\n  | OrderDeliver\r\n  | OrderDeliverFulfilled\r\n  | OrderDeliverRejected\r\n  | OrderDeliverReset;\r\n\r\nexport type OrderActions =\r\n  | OrderCreate\r\n  | OrderCreateFulfilled\r\n  | OrderCreateRejected\r\n  | OrderCreateReset\r\n  | OrderDetails\r\n  | OrderDetailsFulfilled\r\n  | OrderDetailsRejected\r\n  | OrderPay\r\n  | OrderPayFulfilled\r\n  | OrderPayRejected\r\n  | OrderPayReset\r\n  | OrderMyList\r\n  | OrderMyListFulfilled\r\n  | OrderMyListRejected\r\n  | OrderMyListReset;\r\n","import { UserInfo } from \"./../users/types\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_FULFILLED = \"USER_DETAILS_FULFILLED\";\r\nexport const USER_DETAILS_REJECTED = \"USER_DETAILS_REJECTED\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport interface UserState {\r\n  user?: UserInfo;\r\n  loading?: boolean | null;\r\n  error?: string;\r\n}\r\n\r\nexport interface UserDetails {\r\n  type: typeof USER_DETAILS_REQUEST;\r\n}\r\nexport interface DetailsFulfilled {\r\n  type: typeof USER_DETAILS_FULFILLED;\r\n  payload: UserInfo;\r\n}\r\nexport interface DetailsRejected {\r\n  type: typeof USER_DETAILS_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface DetailsReset {\r\n  type: typeof USER_DETAILS_RESET;\r\n}\r\n\r\nexport type UserDetailsAction =\r\n  | UserDetails\r\n  | DetailsFulfilled\r\n  | DetailsRejected\r\n  | DetailsReset;\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_FULFILLED = \"USER_LOGIN_FULFILLED\";\r\nexport const USER_LOGIN_REJECTED = \"USER_LOGIN_REJECTED\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_FULFILLED = \"USER_LIST_FULFILLED\";\r\nexport const USER_LIST_REJECTED = \"USER_LIST_REJECTED\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_FULFILLED = \"USER_DELETE_FULFILLED\";\r\nexport const USER_DELETE_REJECTED = \"USER_DELETE_REJECTED\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_FULFILLED = \"USER_UPDATE_FULFILLED\";\r\nexport const USER_UPDATE_REJECTED = \"USER_UPDATE_REJECTED\";\r\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\r\n\r\nexport interface UserState {\r\n  userInfo?: UserInfo | null;\r\n  loading?: boolean | null;\r\n  error?: string;\r\n  users?: Array<UserInfo> | null;\r\n  success?: boolean | null;\r\n  user?: UserInfo | null;\r\n}\r\n\r\nexport interface UserInfo {\r\n  _id?: string;\r\n  name?: string;\r\n  isAdmin?: boolean;\r\n  email?: string;\r\n  token?: string;\r\n  password?: string;\r\n  password_repeat?: string;\r\n}\r\n\r\nexport interface Login {\r\n  type: typeof USER_LOGIN_REQUEST;\r\n}\r\nexport interface LoginFulfilled {\r\n  type: typeof USER_LOGIN_FULFILLED;\r\n  payload: UserInfo;\r\n}\r\nexport interface LoginRejected {\r\n  type: typeof USER_LOGIN_REJECTED;\r\n  payload: string;\r\n}\r\nexport interface Logout {\r\n  type: typeof USER_LOGOUT;\r\n}\r\n\r\nexport interface UserList {\r\n  type: typeof USER_LIST_REQUEST;\r\n}\r\n\r\nexport interface UserListFulfilled {\r\n  type: typeof USER_LIST_FULFILLED;\r\n  payload: Array<UserInfo>;\r\n}\r\n\r\nexport interface UserListRejected {\r\n  type: typeof USER_LIST_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface UserListReset {\r\n  type: typeof USER_LIST_RESET;\r\n}\r\n\r\nexport interface UserDelete {\r\n  type: typeof USER_DELETE_REQUEST;\r\n}\r\n\r\nexport interface UserDeleteFulfilled {\r\n  type: typeof USER_DELETE_FULFILLED;\r\n}\r\n\r\nexport interface UserDeleteRejected {\r\n  type: typeof USER_DELETE_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface UserUpdate {\r\n  type: typeof USER_UPDATE_REQUEST;\r\n}\r\n\r\nexport interface UserUpdateFulfilled {\r\n  type: typeof USER_UPDATE_FULFILLED;\r\n}\r\n\r\nexport interface UserUpdateRejected {\r\n  type: typeof USER_UPDATE_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport interface UserUpdateReset {\r\n  type: typeof USER_UPDATE_RESET;\r\n}\r\n\r\nexport type UserAction = Login | LoginFulfilled | LoginRejected | Logout;\r\n\r\nexport type UsersListActions =\r\n  | UserList\r\n  | UserListFulfilled\r\n  | UserListRejected\r\n  | UserListReset;\r\n\r\nexport type UserDeleteActions =\r\n  | UserDelete\r\n  | UserDeleteFulfilled\r\n  | UserDeleteRejected;\r\n\r\nexport type UserUpdateActions =\r\n  | UserUpdate\r\n  | UserUpdateFulfilled\r\n  | UserUpdateRejected\r\n  | UserUpdateReset;\r\n","import { ORDER_MY_LIST_RESET } from \"./../order/types\";\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { USER_DETAILS_RESET } from \"../userDetails/types\";\r\n//Types\r\nimport {\r\n  UserState,\r\n  UserAction,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_FULFILLED,\r\n  USER_LOGIN_REJECTED,\r\n  USER_LOGOUT,\r\n  USER_LIST_RESET,\r\n  UserInfo,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = { userInfo: null, loading: null, error: \"\" };\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserAction\r\n): UserState {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_FULFILLED:\r\n      return { ...state, loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_REJECTED:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//SideEffect\r\nexport const login = (email: string, password: string) => async (\r\n  dispatch: Dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post<UserInfo>(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_FULFILLED,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch: Dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_MY_LIST_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n};\r\n","import { UserInfo } from \"../users/types\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_FULFILLED = \"USER_REGISTER_FULFILLED\";\r\nexport const USER_REGISTER_REJECTED = \"USER_REGISTER_REJECTED\";\r\n\r\nexport interface Register {\r\n  type: typeof USER_REGISTER_REQUEST;\r\n}\r\nexport interface RegisterFulfilled {\r\n  type: typeof USER_REGISTER_FULFILLED;\r\n  payload: UserInfo;\r\n}\r\nexport interface RegisterRejected {\r\n  type: typeof USER_REGISTER_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport type UserRegisterAction =\r\n  | Register\r\n  | RegisterFulfilled\r\n  | RegisterRejected;\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { UserInfo, UserState, USER_LOGIN_FULFILLED } from \"../users/types\";\r\nimport {\r\n  USER_REGISTER_FULFILLED,\r\n  USER_REGISTER_REJECTED,\r\n  USER_REGISTER_REQUEST,\r\n  UserRegisterAction,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = { userInfo: {}, loading: null, error: \"\" };\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserRegisterAction\r\n): UserState {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_REGISTER_FULFILLED:\r\n      return { ...state, loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_REJECTED:\r\n      return { ...state, loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//SideEffects or ActionCreator\r\nexport const registerUser = (\r\n  name: string,\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string\r\n) => async (dispatch: Dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post<UserInfo>(\r\n      \"/api/users\",\r\n      { name, email, password, confirmPassword },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_FULFILLED,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_FULFILLED,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import { UserInfo } from \"./../users/types\";\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_FULFILLED,\r\n  USER_DETAILS_REJECTED,\r\n  UserDetailsAction,\r\n  UserState,\r\n  USER_DETAILS_RESET,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = { user: {}, loading: null, error: \"\" };\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserDetailsAction\r\n): UserState {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { loading: true };\r\n    case USER_DETAILS_FULFILLED:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//SideEffects\r\nexport const getUserDetails = (id: string | undefined) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get<UserInfo>(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import { UserInfo } from \"../users/types\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_FULFILLED = \"USER_UPDATE_PROFILE_FULFILLED\";\r\nexport const USER_UPDATE_PROFILE_REJECTED = \"USER_UPDATE_PROFILE_REJECTED\";\r\n\r\nexport interface UserProfile {\r\n  userInfo?: UserInfo;\r\n  loading?: boolean | null;\r\n  success?: boolean;\r\n  error?: string;\r\n}\r\n\r\nexport interface UpdateProfile {\r\n  type: typeof USER_UPDATE_PROFILE_REQUEST;\r\n}\r\nexport interface UpdateFulfilled {\r\n  type: typeof USER_UPDATE_PROFILE_FULFILLED;\r\n  payload: UserInfo;\r\n}\r\nexport interface DetalisRejected {\r\n  type: typeof USER_UPDATE_PROFILE_REJECTED;\r\n  payload: string;\r\n}\r\n\r\nexport type UserUpdateAction =\r\n  | UpdateProfile\r\n  | UpdateFulfilled\r\n  | DetalisRejected;\r\n","import { UserInfo } from \"./../users/types\";\r\n//Types\r\nimport {\r\n  USER_UPDATE_PROFILE_FULFILLED,\r\n  USER_UPDATE_PROFILE_REJECTED,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  UserUpdateAction,\r\n  UserProfile,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\n//Reducer\r\n\r\nconst initialState: UserProfile = {\r\n  userInfo: {},\r\n  success: false,\r\n  loading: null,\r\n  error: \"\",\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserUpdateAction\r\n): UserProfile {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_FULFILLED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: true,\r\n        userInfo: action.payload,\r\n      };\r\n    case USER_UPDATE_PROFILE_REJECTED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        success: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//SideEffect (Action Creator)\r\nexport const updateUserProfile = (user: UserInfo) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put<UserInfo>(\r\n      `/api/users/profile`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_FULFILLED,\r\n  USER_LIST_REJECTED,\r\n  USER_LIST_RESET,\r\n  UsersListActions,\r\n  UserState,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = { users: [] };\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UsersListActions\r\n) {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_FULFILLED:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creator\r\nexport const listUsers = () => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_FULFILLED,\r\n  USER_DELETE_REJECTED,\r\n  UserDeleteActions,\r\n  UserState,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = {};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserDeleteActions\r\n) {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const deleteUser = (id: string | undefined) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_FULFILLED,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport { USER_DETAILS_FULFILLED } from \"../userDetails/types\";\r\nimport {\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_FULFILLED,\r\n  USER_UPDATE_REJECTED,\r\n  USER_UPDATE_RESET,\r\n  UserUpdateActions,\r\n  UserState,\r\n  UserInfo,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: UserState = { user: {} };\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: UserUpdateActions\r\n) {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const updateUser = (user: UserInfo) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_FULFILLED,\r\n    });\r\n    dispatch({ type: USER_DETAILS_FULFILLED, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_FULFILLED,\r\n  ORDER_CREATE_REJECTED,\r\n  OrderState,\r\n  OrderInfo,\r\n  OrderActions,\r\n  ORDER_CREATE_RESET,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = {\r\n  order: {},\r\n  loading: null,\r\n  success: false,\r\n  error: \"\",\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderActions\r\n): OrderState {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_FULFILLED:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\n\r\nexport const createOrder = (order: OrderInfo) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post<OrderInfo>(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","// Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_FULFILLED,\r\n  ORDER_DETAILS_REJECTED,\r\n  OrderState,\r\n  OrderActions,\r\n  //OrderInfo,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = {\r\n  order: null,\r\n  //{ orderItems: [], shippingAddress: {} },\r\n  loading: null, //loading not true\r\n  error: \"\",\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderActions\r\n): OrderState {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_DETAILS_FULFILLED:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const getOrderById = (id: string) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\n//Types\r\nimport {\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FULFILLED,\r\n  ORDER_PAY_REJECTED,\r\n  ORDER_PAY_RESET,\r\n  OrderActions,\r\n  OrderState,\r\n  PaymentResult,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = {\r\n  success: false,\r\n  loading: null,\r\n  error: \"\",\r\n  // order: {},\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderActions\r\n): OrderState {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_PAY_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case ORDER_PAY_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const payOrder = (\r\n  orderId: string | undefined,\r\n  paymentResult: PaymentResult\r\n  //order?: OrderInfo\r\n) => async (dispatch: Dispatch, getState: () => RootState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put<PaymentResult>(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\n//Types\r\nimport {\r\n  ORDER_DELIVERED_REQUEST,\r\n  ORDER_DELIVERED_FULFILLED,\r\n  ORDER_DELIVERED_REJECTED,\r\n  OrderDeliverActions,\r\n  OrderState,\r\n  ORDER_DELIVERED_RESET,\r\n  OrderInfo,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = {\r\n  success: false,\r\n  loading: null,\r\n  error: \"\",\r\n  // order: {},\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderDeliverActions\r\n): OrderState {\r\n  switch (action.type) {\r\n    case ORDER_DELIVERED_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DELIVERED_FULFILLED:\r\n      return { loading: false, success: true };\r\n    case ORDER_DELIVERED_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_DELIVERED_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const deliverOrder = (order: OrderInfo | null | undefined) => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVERED_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order?._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVERED_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVERED_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","// Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_FULFILLED,\r\n  ORDER_MY_LIST_REJECTED,\r\n  ORDER_MY_LIST_RESET,\r\n  OrderState,\r\n  OrderActions,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = {\r\n  orders: [],\r\n  loading: null, //loading not true\r\n  error: \"\",\r\n};\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderActions\r\n): OrderState {\r\n  switch (action.type) {\r\n    case ORDER_MY_LIST_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_MY_LIST_FULFILLED:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_MY_LIST_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_MY_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action\r\nexport const listMyOrders = () => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_MY_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_MY_LIST_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_MY_LIST_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","//Types\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { RootState } from \"../../store\";\r\nimport {\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_FULFILLED,\r\n  ORDER_LIST_REJECTED,\r\n  OrderListActions,\r\n  OrderState,\r\n} from \"./types\";\r\n\r\n//Reducer\r\nconst initialState: OrderState = { orders: [] };\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: OrderListActions\r\n) {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_LIST_FULFILLED:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_LIST_REJECTED:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n//Action Creator\r\nexport const listOrders = () => async (\r\n  dispatch: Dispatch,\r\n  getState: () => RootState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo?.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_FULFILLED,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_REJECTED,\r\n      payload: error?.response.data.message || error.message,\r\n    });\r\n  }\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport productList from \"./features/products/productList\";\r\nimport productDetails from \"./features/productDetails/productDetailsList\";\r\nimport productDelete from \"./features/productDetails/productDelete\";\r\nimport productCreate from \"./features/productDetails/productCreate\";\r\nimport productCreateReview from \"./features/productDetails/productReview\";\r\nimport productUpdate from \"./features/productDetails/productUpdate\";\r\nimport productTopRated from \"./features/productDetails/productTopRated\";\r\nimport cart from \"./features/cartDetails/cart\";\r\nimport thunk from \"redux-thunk\";\r\nimport { CartItem } from \"./features/cartDetails/types\";\r\nimport userLogin from \"./features/users/user\";\r\nimport userRegister from \"./features/register/UserRegister\";\r\nimport userDetails from \"./features/userDetails/userProfileDetails\";\r\nimport updateUserProfile from \"./features/profile/updateProfile\";\r\nimport userList from \"./features/users/usersList\";\r\nimport userDelete from \"./features/users/userDelete\";\r\nimport userUpdate from \"./features/users/userUpdates\";\r\nimport orderCreate from \"./features/order/orderCreate\";\r\nimport orderDetails from \"./features/order/orderDetails\";\r\nimport orderPay from \"./features/order/orderPay\";\r\nimport orderDeliver from \"./features/order/orderDelivery\";\r\nimport orderMyList from \"./features/order/orderMyList\";\r\nimport orderList from \"./features/order/orderList\";\r\n\r\nconst cartItemsFromStorage: Array<CartItem> = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\") ?? \"\")\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\") ?? \"\")\r\n  : null;\r\n\r\nconst shippingAddressFromLocalStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\") ?? \"\")\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromLocalStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\nconst reducer = combineReducers({\r\n  productList,\r\n  productDetails,\r\n  productDelete,\r\n  productCreate,\r\n  productUpdate,\r\n  productCreateReview,\r\n  productTopRated,\r\n  cart,\r\n  userLogin,\r\n  userRegister,\r\n  userDetails,\r\n  updateUserProfile,\r\n  userList,\r\n  userDelete,\r\n  userUpdate,\r\n  orderCreate,\r\n  orderDetails,\r\n  orderPay,\r\n  orderDeliver,\r\n  orderMyList,\r\n  orderList,\r\n});\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nconsole.log(store.getState());\r\nexport default store;\r\nexport type RootState = ReturnType<typeof reducer>;\r\n\r\n//Custom useSelector\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst SearchBox = () => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const submitHandler = (e: any) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  return (\r\n    <Form onSubmit={submitHandler} inline className=\" ml-sm-n5 py-2\">\r\n      <Form.Control\r\n        type=\"text\"\r\n        name=\"q\"\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder=\"Search Products Here...\"\r\n        className=\"m-auto mr-sm-2 ml-sm-5\"\r\n        style={{ width: \"450px\" }}\r\n      ></Form.Control>\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"outline-primary\"\r\n        className=\"p-2\"\r\n        style={{ width: \"80px\" }}\r\n      >\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { logout } from \"../redux/features/users/user\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header: React.FC = () => {\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                src=\"/images/she.jpg\"\r\n                alt=\"\"\r\n                style={{\r\n                  width: \"20px\",\r\n                  height: \"20px\",\r\n                  marginTop: \"-5px\",\r\n                  borderRadius: \"80%\",\r\n                }}\r\n              />{\" \"}\r\n              SHEShop\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to={`/profile/${userInfo._id}`}>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                  <LinkContainer to={`/admin/userlist`}>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to={`/admin/productlist`}>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to={`/admin/orderlist`}>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\n\r\ninterface Props {}\r\nconst Layout: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      {children}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\ninterface Props {\r\n  value: number;\r\n  text?: string;\r\n  color?: string;\r\n}\r\nconst Rating: React.FC<Props> = ({ text, value, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span> {text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Product } from \"../types/Product\";\r\nimport Rating from \"./Rating\";\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\nconst Products: React.FC<Props> = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant=\"top\" />\r\n      </Link>\r\n      <Card.Body style={{ width: \"220px\", height: \"175px\" }}>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { Variant } from 'react-bootstrap/esm/types';\r\n\r\ninterface Props {\r\n  variant?: Variant;\r\n}\r\nconst Message: React.FC<Props> = ({ variant = 'info', children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\ninterface Props {\r\n  title?: string;\r\n  description?: string;\r\n  keywords?: string;\r\n}\r\n\r\nconst Meta: React.FC<Props> = ({\r\n  title = \"Welcome to SHEShop | Home\",\r\n  description = \"Find the best product for the cheapest prices\",\r\n  keywords = \"Good Products, Cheap Prices, High Quality\",\r\n}) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keywords\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import React from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\ninterface Props {\r\n  pages?: string | number;\r\n  page?: string | number;\r\n  isAdmin?: boolean;\r\n  keyword?: string;\r\n}\r\nconst Paginate: React.FC<Props> = ({\r\n  pages,\r\n  page,\r\n  keyword = \"\",\r\n  isAdmin = false,\r\n}) => {\r\n  return (\r\n    <>\r\n      {pages && pages > 1 && (\r\n        <Pagination>\r\n          {[...Array(pages).keys()].map((x) => (\r\n            <LinkContainer\r\n              key={x + 1}\r\n              to={\r\n                !isAdmin\r\n                  ? keyword\r\n                    ? `/search/${keyword}/page/${x + 1}`\r\n                    : `/page/${x + 1}`\r\n                  : `/admin/productlist/${x + 1}`\r\n              }\r\n            >\r\n              <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n          ))}\r\n        </Pagination>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nconst CarouselModel: React.FC = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const handleSelect = (selectedIndex: number, e: any) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <Carousel\r\n      activeIndex={index}\r\n      onSelect={handleSelect}\r\n      style={{ width: \"fit-content\" }}\r\n    >\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block m-auto\"\r\n          src=\"/images/slider.jpg\"\r\n          alt=\"First slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n        <Carousel.Caption>\r\n          <h4>\r\n            <img\r\n              src=\"/images/fire.png\"\r\n              alt=\"\"\r\n              style={{ width: \"30px\", height: \"30px\", marginTop: \"-11px\" }}\r\n            />\r\n            Hot & New{\" \"}\r\n          </h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block m-auto\"\r\n          src=\"/images/slider3.jpg\"\r\n          alt=\"Second slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h4 style={{ color: \"#f700ad\" }}>​💄​👝​ Pretty & Simple</h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block m-auto\"\r\n          src=\"/images/slider1.jpg\"\r\n          alt=\"Third slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h4 style={{ color: \"#d04013\" }}>👗 Happy Friends Collection</h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block m-auto\"\r\n          src=\"/images/slider1.png\"\r\n          alt=\"Forth slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h4 style={{ color: \"#00cfff\" }}> 🎀 Choose Your Identity !</h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block  m-auto\"\r\n          src=\"/images/slider4.jpg\"\r\n          alt=\"Fifth slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n\r\n        <Carousel.Caption>\r\n          <h4 style={{ color: \"#c02546\" }}>\r\n            📿✨ Every detail makes a difference\r\n          </h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img\r\n          className=\"d-block  m-auto\"\r\n          src=\"/images/slider2.jpg\"\r\n          alt=\"sixth slide\"\r\n          style={{ width: \"1060px\", height: \"800px\" }}\r\n        />\r\n        <Carousel.Caption>\r\n          <h4 style={{ color: \"#005098\" }}>👗 Your Elegance is our Passion</h4>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default CarouselModel;\r\n","import React from \"react\";\r\nimport CarouselModel from \"../components/CarouselModel\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst ProductCarousel = () => {\r\n  return (\r\n    <>\r\n      <h1\r\n        style={{\r\n          marginTop: \"20px\",\r\n          marginBottom: \"20px\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        Welcome To Ladies Corner ❤️!\r\n      </h1>\r\n      <Row className=\"mb-3\">\r\n        <Col md={10} sm={4} style={{ marginLeft: \"-160px\" }} className=\"mb-3\">\r\n          <CarouselModel />\r\n        </Col>\r\n\r\n        <Col md={2} style={{ marginLeft: \"155px\" }}>\r\n          <div\r\n            style={{\r\n              display: \"inline-block\",\r\n              width: \"max-content\",\r\n              marginBottom: \"15px\",\r\n            }}\r\n          >\r\n            <img\r\n              src=\"/images/new.gif\"\r\n              alt=\"\"\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n            />{\" \"}\r\n            <h4 style={{ marginTop: \"-35px\", marginLeft: \"55px\" }}>\r\n              New Arrival !\r\n            </h4>\r\n          </div>\r\n          <img\r\n            src=\"/images/collection.gif\"\r\n            alt=\"\"\r\n            style={{ width: \"350px\", height: \"100%\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Products from \"../components/Products\";\r\nimport { Product } from \"../types/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport { listProducts } from \"../redux/features/products/productList\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\ninterface Params {\r\n  keyword?: string | undefined;\r\n  pageNumber?: string | undefined;\r\n}\r\n\r\nconst HomeScreen: React.FC<Props> = () => {\r\n  const { keyword, pageNumber } = useParams<Params>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useTypedSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n  console.log(keyword, pageNumber);\r\n\r\n  useEffect(() => {\r\n    //Dispatch (SideEffect)\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  // if (loading) return <Loader />;\r\n  // if (error || !(products instanceof Array))\r\n  //   return <Message variant=\"danger\">{error}</Message>;\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to=\"/\" className=\"btn btn-light\">\r\n          Go Back\r\n        </Link>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <h2\r\n            style={{\r\n              textAlign: \"center\",\r\n              paddingTop: \"25px\",\r\n            }}\r\n          >\r\n            Latest Products\r\n          </h2>\r\n          <Row>\r\n            {products?.map((product: Product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Products product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : \"\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Product } from \"../types/Product\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { listProductDetails } from \"../redux/features/productDetails/productDetailsList\";\r\nimport { reviewProduct } from \"../redux/features/productDetails/productReview\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../redux/features/productDetails/types\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport Meta from \"../components/Meta\";\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\ninterface Review {\r\n  _id: string | number;\r\n  name: string;\r\n  rating: number | string;\r\n  comment: string;\r\n  user: string;\r\n  createdAt: Date;\r\n}\r\n\r\nconst ProductScreen: React.FC<Props> = () => {\r\n  const [qty, setQty] = useState<number | string>(1);\r\n  const [rating, setRating] = useState<number | string>(0);\r\n  const [comment, setComment] = useState<string>(\"\");\r\n\r\n  const { id } = useParams<Params>();\r\n\r\n  //custom useSelector (state.reducer)\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDetails = useTypedSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const productReview = useTypedSelector((state) => state.productCreateReview);\r\n  const { success: successReview, error: errorReview } = productReview;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  //Check here\r\n  useEffect(() => {\r\n    if (successReview) {\r\n      alert(\"Review Submitted, Thank You !\");\r\n      setRating(0);\r\n      setComment(\"\");\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(listProductDetails(id));\r\n  }, [dispatch, id, successReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(reviewProduct(id, { rating, comment }));\r\n  };\r\n\r\n  if (loading) return <Loader />;\r\n  if (error || !product) return <Message variant=\"danger\">{error}</Message>;\r\n\r\n  return (\r\n    <>\r\n      <Meta title={product.name} />\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      <Row>\r\n        <Col md={6}>\r\n          <Image src={product.image} alt={product.name} fluid />\r\n        </Col>\r\n        <Col md={3}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>{product.name}</h2>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Rating\r\n                value={product.rating}\r\n                text={`${product.numReviews} reviews`}\r\n              />\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n            <ListGroup.Item>Description: {product.description}</ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={3}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Price:</Col>\r\n                  <Col>\r\n                    <strong>${product.price}</strong>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Status:</Col>\r\n                  <Col>\r\n                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {product.countInStock > 0 && (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Qty</Col>\r\n                    <Col>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        value={qty}\r\n                        onChange={(e) => setQty(e.target.value)}\r\n                      >\r\n                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  onClick={addToCartHandler}\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={product.countInStock === 0}\r\n                >\r\n                  Add To Cart\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h2>Reviews</h2>\r\n          {product.reviews?.length === 0 && <Message>No Reviews yet!</Message>}\r\n          <ListGroup variant=\"flush\">\r\n            {product.reviews?.map((review: Review) => (\r\n              <ListGroup.Item key={review._id}>\r\n                <strong>{review.name}</strong>\r\n                <Rating value={Number(review.rating)} />\r\n                <p>{review.createdAt.toString().substring(0, 10)}</p>\r\n                <p>{review.comment}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n            <ListGroup.Item>\r\n              <h1>Write a Review</h1>\r\n              {errorReview && <Message variant=\"danger\">{errorReview}</Message>}\r\n              {userInfo ? (\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group controlId=\"rating\">\r\n                    <Form.Label>Rating</Form.Label>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={rating}\r\n                      onChange={(e) => setRating(e.target.value)}\r\n                    >\r\n                      <option value=\"\">Select..</option>\r\n                      <option value=\"1\">1 - Poor</option>\r\n                      <option value=\"2\">2 - Fair</option>\r\n                      <option value=\"3\">3 - Good</option>\r\n                      <option value=\"4\">4 - Very Good</option>\r\n                      <option value=\"5\">5 - Excellent</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"comment\">\r\n                    <Form.Label>Comment</Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      value={comment}\r\n                      onChange={(e) => setComment(e.target.value)}\r\n                      placeholder=\"Leave a Comment..\"\r\n                    ></Form.Control>\r\n                    <Button\r\n                      style={{ marginTop: \"20px\" }}\r\n                      type=\"submit\"\r\n                      variant=\"primary\"\r\n                    >\r\n                      {\" \"}\r\n                      Submit{\" \"}\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form>\r\n              ) : (\r\n                <Message>\r\n                  Please <Link to=\"/login\">Sign in</Link> to write a review\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n\r\n// useEffect(() => {\r\n//   const fetchProducts = async () => {\r\n//     const { data } = await axios.get('/api/products');\r\n//     setProducts(data);\r\n//   };\r\n//   fetchProducts();\r\n// }, [products]);\r\n\r\n// const product = products.find((p) => p._id === id);\r\n// if (!product) {\r\n//   return <div>Error 404! Not Found</div>;\r\n// }\r\n","import { useParams } from \"react-router\";\r\nimport qs from \"querystring\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../redux/features/cartDetails/cart\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst CartScreen: React.FC = () => {\r\n  const { id: productId } = useParams<Params>();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const qty = location.search ? parseInt(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useTypedSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    //console.log(productId);\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n    if (qty) {\r\n      history.push({\r\n        search: qs.stringify({ qty }),\r\n      });\r\n    }\r\n  }, [dispatch, history, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id: string) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n  //console.log(qs.parse(location.search.replace('?', '')));\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your Cart is empty <Link to=\"/\">Go back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      variant=\"light\"\r\n                      type=\"button\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item?.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\"\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\ninterface Props {\r\n  children: {};\r\n}\r\n\r\nconst FormContainer: React.FC<Props> = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../redux/features/users/user\";\r\n\r\ntype Inputs = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nconst LoginScreen: React.FC = () => {\r\n  const { handleSubmit, errors, register } = useForm<Inputs>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const onSubmit = (data: Inputs) => {\r\n    const { email, password } = data;\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {loading && <Loader />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <label>Email Address</label>\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"pattern\"\r\n            placeholder=\"Type Your Email...\"\r\n            ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n          ></Form.Control>\r\n          {errors.email && <p>Please, follow the pattern name@example.com</p>}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label>Password</label>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password..\"\r\n            ref={register({ required: true })}\r\n            {...(errors.password && <p>Invalid Email or Password</p>)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n      </form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?\r\n          <Link\r\n            className=\"px-3\"\r\n            to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n          >\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Button, Form, FormControl } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { registerUser } from \"../redux/features/register/UserRegister\";\r\n\r\ntype Inputs = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  password_repeat: string;\r\n};\r\n\r\nconst RegisterScreen: React.FC<Inputs> = () => {\r\n  const { handleSubmit, errors, register, setError } = useForm<Inputs>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useTypedSelector((state) => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, history, redirect]);\r\n\r\n  const onSubmit = (data: Inputs) => {\r\n    console.log(data);\r\n    const { name, email, password, password_repeat } = data;\r\n    if (password !== password_repeat) {\r\n      setError(\"password_repeat\", { message: `The two passwords don't match` });\r\n    } else {\r\n      dispatch(registerUser(name, email, password, password_repeat));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign UP</h1>\r\n      {loading && <Loader />}\r\n      {error && <Message variant=\"danger\">{error}</Message>}\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <label>Name</label>\r\n          <FormControl\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Your name...\"\r\n            ref={register({ required: true })}\r\n          ></FormControl>\r\n          {errors.name && <p>This field is required</p>}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label>Email Address</label>\r\n          <FormControl\r\n            name=\"email\"\r\n            type=\"pattern\"\r\n            placeholder=\"Type Your Email...\"\r\n            ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n          ></FormControl>\r\n          {errors.email && <p>Please, follow the pattern name@example.com</p>}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label>Password</label>\r\n          <FormControl\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password..\"\r\n            ref={register({ required: true, minLength: 8 })}\r\n          ></FormControl>\r\n          {errors.password && <p>Password must have at least 8 characters</p>}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <label>Confirm Password</label>\r\n          <FormControl\r\n            name=\"password_repeat\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password..\"\r\n            ref={register({ required: true })}\r\n          />\r\n          {errors.password_repeat && <p>The passwords don't match</p>}\r\n          {/* {confirmError === true && (\r\n            <Message variant=\"danger\">The two passwords don't match</Message>\r\n          )} */}\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account ?\r\n          <Link\r\n            className=\"px-3\"\r\n            to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\r\n          >\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserDetails } from \"../redux/features/userDetails/userProfileDetails\";\r\nimport { updateUserProfile } from \"../redux/features/profile/updateProfile\";\r\nimport { listMyOrders } from \"../redux/features/order/orderMyList\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\ntype Inputs = {\r\n  name?: string;\r\n  email?: string;\r\n  password: string;\r\n  password_repeat: string;\r\n};\r\n\r\nconst ProfileScreen: React.FC = () => {\r\n  const {\r\n    handleSubmit,\r\n    errors,\r\n    register,\r\n    setValue,\r\n    setError,\r\n  } = useForm<Inputs>({\r\n    mode: \"onChange\",\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userProfileDetails = useTypedSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userProfileDetails;\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userProfile = useTypedSelector((state) => state.updateUserProfile);\r\n  const { success } = userProfile;\r\n\r\n  const orderMyList = useTypedSelector((state) => state.orderMyList);\r\n  const { orders, loading: ordersLoading, error: ordersError } = orderMyList;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user?.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setValue(\"email\", user.email, { shouldValidate: true });\r\n        setValue(\"name\", user.name);\r\n      }\r\n    }\r\n  }, [userInfo, history, dispatch, setValue, user]);\r\n\r\n  const onSubmit = (data: Inputs) => {\r\n    console.log(data);\r\n    const { name, email, password, password_repeat } = data;\r\n    if (password !== password_repeat) {\r\n      return setError(\"password_repeat\", {\r\n        message: `The two passwords don't match`,\r\n      });\r\n    }\r\n    dispatch(\r\n      updateUserProfile({\r\n        _id: user?._id || \"\",\r\n        name,\r\n        email,\r\n        password,\r\n        password_repeat,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {loading && <Loader />}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {success && (\r\n          <Message variant=\"success\">Profile Updated successfully</Message>\r\n        )}\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group>\r\n            <label>Name</label>\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Your name...\"\r\n              ref={register({ required: true })}\r\n            ></Form.Control>\r\n            {errors.name && <p>This field is required</p>}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <label>Email Address</label>\r\n            <Form.Control\r\n              name=\"email\"\r\n              type=\"pattern\"\r\n              placeholder=\"Type Your Email...\"\r\n              ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n            ></Form.Control>\r\n            {errors.email && <p>Please, follow the pattern name@example.com</p>}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <label>Password</label>\r\n            <Form.Control\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Password..\"\r\n              ref={register({ required: true, minLength: 8 })}\r\n            ></Form.Control>\r\n            {errors.password && <p>Password must have at least 8 characters</p>}\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <label>Confirm Password</label>\r\n            <Form.Control\r\n              name=\"password_repeat\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password..\"\r\n              ref={register({ required: true })}\r\n            />\r\n            {errors.password_repeat && <p>The passwords don't match</p>}\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {ordersLoading ? (\r\n          <Loader />\r\n        ) : ordersError ? (\r\n          <Message variant=\"danger\">{ordersError}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders?.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order?.createdAt?.toString().substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order?.isPaid ? (\r\n                      order?.paidAt?.toString().substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order?.isDelivered ? (\r\n                      order?.deliveredAt?.toString().substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order?._id}`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      //onClick={() => ()}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\n//We can find this component in react-hook-form named Wizard\r\ninterface Props {\r\n  step1?: boolean;\r\n  step2?: boolean;\r\n  step3?: boolean;\r\n  step4?: boolean;\r\n}\r\n\r\nconst CheckoutSteps: React.FC<Props> = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { saveShippingAddress } from \"../redux/features/cartDetails/cart\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\ninterface FullAddress {\r\n  address: string;\r\n  city: string;\r\n  postalCode: number;\r\n  country: string;\r\n}\r\n\r\nconst ShippingScreen: React.FC<FullAddress> = () => {\r\n  const cart = useTypedSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { register, handleSubmit, setValue } = useForm();\r\n\r\n  const onSubmit = (data: FullAddress) => {\r\n    console.log(data);\r\n    const { address, postalCode, city, country } = data;\r\n    dispatch(saveShippingAddress({ address, postalCode, city, country }));\r\n    setValue(\"address\", shippingAddress?.address);\r\n    setValue(\"city\", shippingAddress?.city);\r\n    setValue(\"postalCode\", shippingAddress?.postalCode);\r\n    setValue(\"country\", shippingAddress?.country);\r\n    history.push(\"/payment\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n\r\n      <h1>Shipping</h1>\r\n\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address\"\r\n            placeholder=\"Type your address..\"\r\n            ref={register({ required: true })}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"city\"\r\n            placeholder=\"Your City Name..\"\r\n            ref={register({ required: true })}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"postalCode\"\r\n            placeholder=\"The Postal Code..\"\r\n            ref={register({ required: true })}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"country\"\r\n            placeholder=\"Your Country..\"\r\n            ref={register({ required: true })}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { savePaymentMethod } from \"../redux/features/cartDetails/cart\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\ninterface PaymentMethod {\r\n  paymentMethod: string | undefined;\r\n}\r\n\r\nconst PaymentScreen: React.FC = () => {\r\n  const cart = useTypedSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  if (!shippingAddress) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const { register, handleSubmit, setValue } = useForm();\r\n\r\n  const onSubmit = (data: PaymentMethod) => {\r\n    console.log(data);\r\n    const { paymentMethod } = data;\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    setValue(\"paymentMethod\", paymentMethod);\r\n    console.log(paymentMethod);\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method of Payment</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              value=\"PayPal\"\r\n              ref={register()}\r\n              //checked\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"Stripe\"\r\n              id=\"Stripe\"\r\n              name=\"paymentMethod\"\r\n              value=\"Stripe\"\r\n              ref={register()}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createOrder } from \"../redux/features/order/orderCreate\";\r\n\r\nconst PlaceOrderScreen: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const cart = useTypedSelector((state) => state.cart);\r\n\r\n  // if (!cart.shippingAddress.address) {\r\n  //   history.push(\"/shipping\");\r\n  // } else if (!cart.paymentMethod) {\r\n  //   history.push(\"/payment\");\r\n  // }\r\n\r\n  //Calculate Prices\r\n  cart.itemsPrice = Number(\r\n    cart.cartItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2)\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 50 ? 0 : 20;\r\n  cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n\r\n  cart.totalPrice = Number(\r\n    (cart.itemsPrice + cart.shippingPrice + cart.taxPrice).toFixed(2)\r\n  );\r\n\r\n  const orderCreate = useTypedSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        paymentMethod: cart.paymentMethod,\r\n        shippingAddress: cart.shippingAddress,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n        //_id: order?._id,\r\n      })\r\n    );\r\n    //console.log(userInfo?._id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/orders/${order?._id}`);\r\n      console.log(order?._id);\r\n    }\r\n  }, [history, success, order]);\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row className=\"py-3\">\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress?.address}, {cart.shippingAddress?.city},{\" \"}\r\n                {cart.shippingAddress?.postalCode},{\" \"}\r\n                {cart.shippingAddress?.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your Cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        <Col md={4} className=\"ml-auto\">\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Taxes</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"primary\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getOrderById } from \"../redux/features/order/orderDetails\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  PaymentResult,\r\n  ORDER_DELIVERED_RESET,\r\n} from \"../redux/features/order/types\";\r\nimport { payOrder } from \"../redux/features/order/orderPay\";\r\nimport { deliverOrder } from \"../redux/features/order/orderDelivery\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n//declare var window: any;\r\n\r\nconst OrderScreen: React.FC = () => {\r\n  const { id: orderId } = useParams<Params>();\r\n\r\n  const [pageLoading, setPageLoading] = useState(true);\r\n  const [clientId, setClientId] = useState(\"\");\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const orderDetails = useTypedSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useTypedSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useTypedSelector((state) => state.orderDeliver);\r\n  const { success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const itemsPrice = Number(\r\n    order?.orderItems\r\n      ?.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVERED_RESET });\r\n      dispatch(getOrderById(orderId));\r\n      console.log(order?.user);\r\n    }\r\n  }, [dispatch, history, order, userInfo, successPay, orderId, successDeliver]);\r\n\r\n  useEffect(() => {\r\n    if (loading === false) {\r\n      setPageLoading(false);\r\n      //console.log(order);\r\n    }\r\n  }, [loading]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      setClientId(clientId);\r\n      setSdkReady(true);\r\n    })();\r\n  });\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return pageLoading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order: {order?._id}</h1>\r\n      <Row className=\"py-3\">\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order?.user?.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{\" \"}\r\n                <a href={`mailto:${order?.user?.email}`}>\r\n                  {\" \"}\r\n                  {order?.user?.email}\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order?.shippingAddress?.address},{\" \"}\r\n                {order?.shippingAddress?.city},{\" \"}\r\n                {order?.shippingAddress?.postalCode},{\" \"}\r\n                {order?.shippingAddress?.country}\r\n              </p>\r\n              {order?.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order?.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not delivered yet</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order?.paymentMethod}\r\n              </p>\r\n              {order?.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order?.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not paid yet</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order?.orderItems?.length === 0 ? (\r\n                <Message>Your Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order?.orderItems?.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                        <Col md={4} className=\"ml-auto\">\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>shipping</Col>\r\n                  <Col>${order?.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Taxes</Col>\r\n                  <Col>${order?.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price</Col>\r\n                  <Col>${order?.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order?.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalScriptProvider options={{ \"client-id\": clientId }}>\r\n                      <PayPalButtons\r\n                        style={{ layout: \"vertical\" }}\r\n                        onApprove={(paymentResult: PaymentResult) =>\r\n                          dispatch(payOrder(order?._id, paymentResult))\r\n                        }\r\n                      />\r\n                    </PayPalScriptProvider>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n\r\n              {userInfo &&\r\n                userInfo?.isAdmin &&\r\n                order?.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { useHistory } from \"react-router\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listOrders } from \"../redux/features/order/orderList\";\r\n//import { deleteOrder } from \"../redux/features/Order/OrderDelete\";\r\n\r\nconst OrderListScreen: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderList = useTypedSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  //   const userDelete = useTypedSelector((state) => state.userDelete);\r\n  //   const {\r\n  //     loading: loadingDelete,\r\n  //     error: errorDelete,\r\n  //     success: successDelete,\r\n  //   } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n\r\n  //   const deleteHandler = (id: string | undefined) => {\r\n  //     if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n  //       //dispatch(deleteUser(id));\r\n  //     }\r\n  //   };\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {/* \r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>} */}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ORDER ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID ?</th>\r\n              <th>DELIVERED ?</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders?.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order?.user?.name}</td>\r\n                <td>{order.createdAt?.toString().substring(0, 10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt?.toString().substring(0, 10)\r\n                  ) : (\r\n                    // <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    // <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                    order.deliveredAt?.toString().substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { useHistory } from \"react-router\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listUsers } from \"../redux/features/users/usersList\";\r\nimport { deleteUser } from \"../redux/features/users/userDelete\";\r\n\r\nconst UserListScreen: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userList = useTypedSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userDelete = useTypedSelector((state) => state.userDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, userInfo, history, successDelete]);\r\n\r\n  const deleteHandler = (id: string | undefined) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users?.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserDetails } from \"../redux/features/userDetails/userProfileDetails\";\r\nimport { updateUser } from \"../redux/features/users/userUpdates\";\r\nimport { USER_UPDATE_RESET } from \"../redux/features/users/types\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst UserEditScreen: React.FC = () => {\r\n  const { id: userId } = useParams<Params>();\r\n\r\n  const [name, setName] = useState<string | undefined>(\"\");\r\n  const [email, setEmail] = useState<string | undefined>(\"\");\r\n  const [isAdmin, setIsAdmin] = useState<boolean | undefined>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const userDetails = useTypedSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useTypedSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user?.name || user?._id !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n        //console.log(userId);\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, dispatch, userId, history, successUpdate]);\r\n\r\n  const submitHandler = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              {\" \"}\r\n              Update{\" \"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport { useHistory } from \"react-router\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { listProducts } from \"../redux/features/products/productList\";\r\nimport { deleteProduct } from \"../redux/features/productDetails/productDelete\";\r\nimport { createProduct } from \"../redux/features/productDetails/productCreate\";\r\nimport { PRODUCT_CREATE_RESET } from \"../redux/features/productDetails/types\";\r\nimport Paginate from \"../components/Paginate\";\r\n\r\ninterface Params {\r\n  keyword?: string | undefined;\r\n  pageNumber?: string | undefined;\r\n}\r\n\r\nconst ProductListScreen: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { pageNumber } = useParams<Params>();\r\n\r\n  const userLogin = useTypedSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productList = useTypedSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productDelete = useTypedSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useTypedSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    if (!userInfo?.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct?._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts(\"\", pageNumber));\r\n    }\r\n  }, [\r\n    dispatch,\r\n    userInfo,\r\n    history,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id: string | number | undefined) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n          {loadingDelete && <Loader />}\r\n          {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\r\n          {loadingCreate && <Loader />}\r\n          {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\r\n          <Col className=\"text-right\">\r\n            <Button className=\"my-3\" onClick={createProductHandler}>\r\n              <i className=\"fas fa-plus\"></i> Create Product\r\n            </Button>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products?.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate page={page} pages={pages} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useTypedSelector } from \"../redux/store\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { listProductDetails } from \"../redux/features/productDetails/productDetailsList\";\r\nimport { updateProduct } from \"../redux/features/productDetails/productUpdate\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../redux/features/productDetails/types\";\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst ProductEditScreen: React.FC = () => {\r\n  const { id: productId } = useParams<Params>();\r\n\r\n  const [name, setName] = useState<string | undefined>(\"\");\r\n  const [brand, setBrand] = useState<string | undefined>(\"\");\r\n  const [category, setCategory] = useState<string | undefined>(\"\");\r\n  const [image, setImage] = useState<string | undefined>(\"\");\r\n  const [description, setDescription] = useState<string | undefined>(\"\");\r\n  const [price, setPrice] = useState<number | undefined | string>(0);\r\n  const [rating, setRating] = useState<number>(0);\r\n  const [countInStock, setCountInStock] = useState<number | string>(0);\r\n  const [uploading, setUploading] = useState<boolean>(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const productDetails = useTypedSelector((state) => state.productDetails);\r\n  const { error, loading, product } = productDetails;\r\n\r\n  const productUpdate = useTypedSelector((state) => state.productUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product?.name || product?._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n        //console.log(userId);\r\n      } else {\r\n        setName(product.name);\r\n        setBrand(product.brand);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setPrice(product.price);\r\n        setDescription(product.description);\r\n        setRating(product.rating);\r\n      }\r\n    }\r\n  }, [dispatch, productId, product, history, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e: any) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        brand,\r\n        price,\r\n        description,\r\n        image,\r\n        category,\r\n        countInStock,\r\n        rating,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                value={name}\r\n                placeholder=\"Enter product name..\"\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={price}\r\n                placeholder=\"Price..\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={image}\r\n                placeholder=\"Upload image url..\"\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id=\"image-file\"\r\n                label=\"Choose File\"\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={brand}\r\n                placeholder=\"Brand..\"\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"CountInStock\">\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={countInStock}\r\n                placeholder=\"CountInStock..\"\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={category}\r\n                placeholder=\"Category..\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={description}\r\n                placeholder=\"Description..\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              {\" \"}\r\n              Update{\" \"}\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentScreen from \"./screens/PaymentScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Layout>\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/\" component={HomeScreen} exact />\n            <Route path=\"/search/:keyword\" component={HomeScreen} exact />\n            <Route path=\"/page/:pageNumber\" component={HomeScreen} exact />\n            <Route\n              path=\"/search/:keyword/page/:pageNumber\"\n              component={HomeScreen}\n              exact\n            />\n\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n\n            <Route path=\"/profile/:id\" component={ProfileScreen} />\n            <Route path=\"/admin/userlist\" component={UserListScreen} />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n            <Route\n              path=\"/admin/productlist\"\n              component={ProductListScreen}\n              exact\n            />\n            <Route\n              path=\"/admin/productlist/:pageNumber\"\n              component={ProductListScreen}\n            />\n            <Route\n              path=\"/admin/product/:id/edit\"\n              component={ProductEditScreen}\n            />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeOrder\" component={PlaceOrderScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n            <Route path=\"/admin/orderlist\" component={OrderListScreen} />\n\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n          </Container>\n        </main>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}